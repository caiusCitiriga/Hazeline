import { Observable } from 'rxjs';
import { SectionStep } from "../interfaces/section-step.interface";
import { NextStepPossibilities } from '../enums/next-step-possibilities.enum';
export declare class Drawer {
    private static tether;
    private static currentStep;
    private static _$nextStep;
    private static onResizeEventListener;
    private static nextStepCustomTriggerWrapper;
    private static prevElZIndex;
    private static prevElOpacity;
    private static prevElPosition;
    private static prevElSelector;
    private static prevElTransition;
    private static overlayZIndex;
    private static infoBoxAlreadyDrawn;
    static drawOverlay(): Observable<boolean>;
    static drawStep(step: SectionStep, isFirstStep?: boolean, isLastStep?: boolean): Observable<NextStepPossibilities>;
    static drawPleaseWait(step: SectionStep): Observable<boolean>;
    static hidePleaseWait(): Observable<boolean>;
    static removeEverything(): void;
    private static callOnStartForThisStep;
    private static bringToFrontHTMLElement;
    private static backupCurrentElementPropertiesAndChangeThem;
    private static attachCustomTriggersIfAny;
    private static detachCustomTriggersIfAny;
    private static restorePreviousElementStatus;
    private static drawTutorialStepInfoBox;
    private static defineInfoBoxElement;
    private static defineTutorialCloseButton;
    private static defineButtons;
    private static setValuesOnInfoBox;
    private static updateTetherPosition;
    private static updateInfoBoxContent;
    private static updateInfoBoxButtons;
    private static getTetherAttachmentForInfoBox;
    private static getTetherTargetAttachmentForInfoBox;
    private static onNextStep;
    private static onLastStep;
    private static onPreviousStep;
    private static onTutorialCloseBtn;
}
