import { CSSRules } from "../interfaces/css-rules.interface";
import { InfoBoxPlacement } from "../enums/info-box-placement.enum";
import { StepStylableElements } from "../interfaces/stylable-elements";
export declare class StylesManager {
    private static viewportSizes;
    static readonly clothId: string;
    static readonly pleaseWaitId: string;
    static readonly infoBoxId: string;
    static readonly tutorialCloseBtnId: string;
    static readonly nextStepBtnId: string;
    static readonly prevStepBtnId: string;
    static readonly infoStepBoxContentElId: string;
    private static infoBoxMargin;
    private static readonly defaultEndButtonText;
    private static readonly defaultNextButtonText;
    private static readonly defaultPreviousButtonText;
    private static readonly defaultPleaseWaitText;
    private static defaultInfoBoxStyles;
    private static defaultPleaseWaitStyles;
    private static defaultTutorialClothStyles;
    private static defaultInfoBoxContentStyles;
    private static defaultTutorialCloseButtonStyles;
    private static defaultInfoBoxPrevButtonStyles;
    private static defaultInfoBoxNextButtonStyles;
    static deafultInfoBoxStyle: CSSRules;
    static defaultPleaseWaitStyle: CSSRules;
    static defaultTutorialClothStyle: CSSRules;
    static defaultInfoBoxContentStyle: CSSRules;
    static defaultInfoBoxNextBtnStyle: CSSRules;
    static defaultInfoBoxPrevBtnStyle: CSSRules;
    static defaultTutorialCloseButtonStyle: CSSRules;
    static resetStyles(): void;
    static applyStepCustomStylesIfAny(customStyles: StepStylableElements): void;
    static updateClothSize(cloth: HTMLElement): void;
    static revealCloth(cloth: HTMLElement): void;
    static styleTutorialCloth(cloth: HTMLElement): HTMLElement;
    static stylePleaseWait(pleaseWaitElement: HTMLElement, alternativeTextContent?: string): HTMLElement;
    static styleTutorialCloseButton(el: HTMLElement): HTMLElement;
    static styleInfoBox(el: HTMLElement, infoboxPlacement: InfoBoxPlacement | string): HTMLElement;
    static styleInfoBoxContent(el: HTMLElement, htmlTextContent: string): HTMLElement;
    static styleInfoBoxNextBtn(el: HTMLElement, alternativeTextContent?: string, isLastStep?: boolean): HTMLElement;
    static styleInfoBoxPrevBtn(el: HTMLElement, alternativeTextContent?: string): HTMLElement;
    static applyPleaseWaitClasses(el: HTMLElement, classes: string[], alternativeTextContent?: string): HTMLElement;
    static applyInfoBoxClasses(el: HTMLElement, classes: string[], infoboxPlacement: InfoBoxPlacement | string): HTMLElement;
    static applyTutorialCloseBtnClasses(el: HTMLElement, classes: string[]): HTMLElement;
    static applyInfoBoxNextBtnClasses(el: HTMLElement, classes: string[], alternativeTextContent?: string, isLastStep?: boolean): HTMLElement;
    static applyInfoBoxPrevBtnClasses(el: HTMLElement, classes: string[], alternativeTextContent?: string): HTMLElement;
    static applyInfoBoxContentClasses(el: HTMLElement, classes: string[], htmlTextContent: string): HTMLElement;
    private static applyClasses;
    private static getMarginSettingsBasedOnPositioning;
    private static applyInfoBoxMargins;
    private static applyCommonProperties;
    private static applyStyles;
    private static getViewportSizes;
    private static setAttribute;
    private static setHTMLTextContent;
}
//# sourceMappingURL=styles-manager.core.d.ts.map